// ============================================================================
// Layout
// Section
// ============================================================================


// Layout Logic ---------------------------------------------------------------
@mixin l-section() {
    padding: 14vh 12vw;
}


// Layout Styling -------------------------------------------------------------
.l-section {
    &__header {
        @include l-section();

        background-color: c(l-section, header);

        a {
            @include content-underline($underline-background-color: c(l-section, header));
        }
    }

    &__contact {
        @include l-section();

        background-color: c(l-section, contact);
    }

    &__errata {
        @include l-section();

        padding-top: ms(0.5, rem); // Controls spacing between portfolio and errata

        background-color: c(l-section, errata);
    }

    &__interests {
        @include l-section();

        background-color: c(l-section, interests);
    }

    &__philosophy {
        @include l-section();

        background-color: c(l-section, philosophy);
    }

    &__portfolio-and-client-list {
        @include l-section();

        padding-bottom: 0; // Visually connects portfolio and errata sections

        background-color: c(l-section, portfolio);

        color: c(type, light);

        a {
            @include content-underline($underline-background-color: c(l-section, portfolio));
        }
    }

    &__projects {
        @include l-section();

        background-color: c(l-section, projects);
    }

    &__writing {
        @include l-section();

        background-color: c(l-section, writing);
    }
}


// 1. Logic (no media queries, see 6)
// 1.1. Mixins and Functions
// 1.2. Functions
// 1.3. Extends (use sparringly, gzip compresses more efficiently:
// http://csswizardry.com/2016/02/mixins-better-for-performance/

// 2. Properties, grouped by intent
// 2.1. Box
// 2.2. Border
// 2.3. Background
// 2.4. Text
// 2.5. Other (ex: cursors, transitions, etc.)

// 3. Supports (if needed)

// 4. Pseudo
// 4.1. Classes
// 4.1. Elements

// 5. States
// 5.1. Visited
// 5.2. Hover
// 5.3. Focus
// 5.4. Active
// 5.5. Aria states (ex: `[aria-busy="true"]`, etc.)

// 6. Contexts (ex: `.context &`)

// 7. Media queries (repeat 1-5, develop mobile first and use mappy-breakpoints)

// 8. Nested selectors (repeat 2-7, leverage suffix selectors, try to avoid
// nesting more than 3 deep)
