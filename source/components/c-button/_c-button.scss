// ============================================================================
// Component
// Button
// ============================================================================


// Component Logic ------------------------------------------------------------



// Component Styling ----------------------------------------------------------
.c-button {
    &__copy {
        @include component-button();
        @include component-size(ms(1.25, rem), 100%, ms(0.5, rem));

        position: static;

        font-size: em(16);

        // States
        &[disabled] {
            opacity: 0.5;

            // States
            &:hover {
                background-color: c(button, background-base);
            }
        }

        &.is-successful {
            background-color: c(validation, success);

            // States
            &:hover {
                background-color: c(validation, success);
            }
        }

        // Button icon
        .c-button__icon {
            @include component-size(ms(0.5, rem), ms(0.5, rem));

            position: relative;
              top: rem(1);
              right: rem(2);
        }

        // Breakpoints
        @include mappy-bp(wrist-medium) {
            @include component-align(float, end);

            margin-top: 0;
            position: relative;
              bottom: rem(40);
              right: rem(10);
            width: rem(84);
        }

        @include mappy-bp(palm-medium) {
            padding-bottom: rem(2);

            font-size: em(14);
        }

        @include mappy-bp(lap-small) {
            height: ms(1.25, rem);
            margin-top: ms(0.5, rem);
            position: static;
            width: 100%;
        }
    }

    &__close {
        @include component-button();
        @include component-size(ms(1.25, rem), 100%, ms(1.25, rem));

        // Button icon
        .c-button__icon {
            @include component-size(ms(0.5, rem), ms(0.5, rem));

            position: relative;
              top: rem(1);
              right: rem(2);

            // Breakpoints
            @include mappy-bp(palm-medium) {
                top: rem(0);
            }

            @include mappy-bp(lap-small) {
                top: rem(1);
            }
        }

        // Breakpoints
        @include mappy-bp(lap-small) {
            margin-top: 0;

            font-size: 70%;
        }
    }
}

// Makes button underline match link underline
.is-contact-button {
    border-radius: 0;

    background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 79%, c(type, dark) 80%, c(type, dark) 82.4%, c(type, light) 82%, c(type, light) 100%);

    color: c(type, dark);

    // States
    &:hover {
        background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 100%);
    }

    &:focus {
        outline: 0.5em solid c(type, dark);

        background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 79%, c(type, light) 80%, c(type, light) 82.4%, c(type, dark) 82%, c(type, dark) 100%);

        color: c(type, light);

        &:hover {
            background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 100%);
        }
    }

    &:active {
        outline: 0.5em solid c(type, dark);

        background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 100%);

        color: c(type, light);
    }

    // Modes
    @media (prefers-color-scheme: dark) {
        background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 79%, c(type, light) 80%, c(type, light) 82.4%, c(type, dark) 82%, c(type, dark) 100%);

        color: c(type, light);

        // States
        &:hover {
            background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 100%);
        }

        &:focus {
            outline: 0.5em solid c(type, light);

            background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 79%, c(type, dark) 80%, c(type, dark) 82.4%, c(type, light) 82%, c(type, light) 100%);

            color: c(type, dark);

            &:hover {
                background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 100%);
            }
        }

        &:active {
            outline: 0.5em solid c(type, light);

            background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 100%);

            color: c(type, dark);
        }
    }

    // Contexts
    .l-section__contact & {
        // Modes
        @media (prefers-color-scheme: dark) {
            background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 79%, c(type, dark) 80%, c(type, dark) 82.4%, c(type, light) 82%, c(type, light) 100%);

            color: c(type, dark);

            // States
            &:hover {
                background: linear-gradient(to bottom, c(type, light) 0%, c(type, light) 100%);
            }

            &:focus {
                outline: 0.5em solid c(type, dark);

                background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 79%, c(type, light) 80%, c(type, light) 82.4%, c(type, dark) 82%, c(type, dark) 100%);

                color: c(type, light);

                &:hover {
                    background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 100%);
                }
            }

            &:active {
                outline: 0.5em solid c(type, dark);

                background: linear-gradient(to bottom, c(type, dark) 0%, c(type, dark) 100%);

                color: c(type, light);
            }
        }
    }
}
